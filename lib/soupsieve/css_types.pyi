# Stubs for soupsieve_py3.css_types (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections.abc import Mapping
from typing import Any

class Immutable:
    __slots__: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    @classmethod
    def __base__(cls): ...
    def __eq__(self, other: Any): ...
    def __ne__(self, other: Any): ...
    def __hash__(self): ...
    def __setattr__(self, name: Any, value: Any) -> None: ...
    def __repr__(self): ...
    __str__: Any = ...

class ImmutableDict(Mapping):
    _d: Any = ...
    _hash: Any = ...
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def __iter__(self): ...
    def __len__(self): ...
    def __getitem__(self, key: Any): ...
    def __hash__(self): ...
    def __repr__(self): ...
    __str__: Any = ...

class Namespaces(ImmutableDict):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class CustomSelectors(ImmutableDict):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...

class Selector(Immutable):
    __slots__: Any = ...
    def __init__(self, tag: Any, ids: Any, classes: Any, attributes: Any, nth: Any, selectors: Any, relation: Any, rel_type: Any, contains: Any, lang: Any, flags: Any) -> None: ...

class SelectorNull(Immutable):
    def __init__(self) -> None: ...

class SelectorTag(Immutable):
    __slots__: Any = ...
    def __init__(self, name: Any, prefix: Any) -> None: ...

class SelectorAttribute(Immutable):
    __slots__: Any = ...
    def __init__(self, attribute: Any, prefix: Any, pattern: Any, xml_type_pattern: Any) -> None: ...

class SelectorContains(Immutable):
    __slots__: Any = ...
    def __init__(self, text: Any) -> None: ...

class SelectorNth(Immutable):
    __slots__: Any = ...
    def __init__(self, a: Any, n: Any, b: Any, of_type: Any, last: Any, selectors: Any) -> None: ...

class SelectorLang(Immutable):
    __slots__: Any = ...
    def __init__(self, languages: Any) -> None: ...
    def __iter__(self): ...
    def __len__(self): ...
    def __getitem__(self, index: Any): ...

class SelectorList(Immutable):
    __slots__: Any = ...
    def __init__(self, selectors: Any = ..., is_not: bool = ..., is_html: bool = ...) -> None: ...
    def __iter__(self): ...
    def __len__(self): ...
    def __getitem__(self, index: Any): ...
