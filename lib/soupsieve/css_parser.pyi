# Stubs for soupsieve_py3.css_parser (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .util import SelectorSyntaxError
from typing import Any, Optional

UNICODE_REPLACEMENT_CHAR: int
PSEUDO_SIMPLE: Any
PSEUDO_SIMPLE_NO_MATCH: Any
PSEUDO_COMPLEX: Any
PSEUDO_COMPLEX_NO_MATCH: Any
PSEUDO_SPECIAL: Any
PSEUDO_SUPPORTED: Any
NEWLINE: str
WS: Any
COMMENTS: str
WSC: Any
CSS_ESCAPES: Any
CSS_STRING_ESCAPES: Any
IDENTIFIER: Any
NTH: Any
VALUE: Any
ATTR: Any
PAT_ID: Any
PAT_CLASS: Any
PAT_TAG: Any
PAT_ATTR: Any
PAT_PSEUDO_CLASS: Any
PAT_PSEUDO_CLASS_SPECIAL: Any
PAT_PSEUDO_CLASS_CUSTOM: Any
PAT_PSEUDO_CLOSE: Any
PAT_PSEUDO_ELEMENT: Any
PAT_AT_RULE: Any
PAT_PSEUDO_NTH_CHILD: Any
PAT_PSEUDO_NTH_TYPE: Any
PAT_PSEUDO_LANG: Any
PAT_PSEUDO_DIR: Any
PAT_COMBINE: Any
PAT_PSEUDO_CONTAINS: Any
RE_CSS_ESC: Any
RE_CSS_STR_ESC: Any
RE_NTH: Any
RE_VALUES: Any
RE_WS: Any
RE_WS_BEGIN: Any
RE_WS_END: Any
RE_CUSTOM: Any
COMMA_COMBINATOR: str
WS_COMBINATOR: str
FLG_PSEUDO: int
FLG_NOT: int
FLG_RELATIVE: int
FLG_DEFAULT: int
FLG_HTML: int
FLG_INDETERMINATE: int
FLG_OPEN: int
FLG_IN_RANGE: int
FLG_OUT_OF_RANGE: int
FLG_PLACEHOLDER_SHOWN: int
_MAXCACHE: int

def _cached_css_compile(pattern: Any, namespaces: Any, custom: Any, flags: Any): ...
def _purge_cache() -> None: ...
def process_custom(custom: Any): ...
def css_unescape(content: Any, string: bool = ...): ...
def escape(ident: Any): ...

class SelectorPattern:
    name: Any = ...
    re_pattern: Any = ...
    def __init__(self, name: Any, pattern: Any) -> None: ...
    def get_name(self): ...
    def enabled(self, flags: Any): ...
    def match(self, selector: Any, index: Any): ...

class SpecialPseudoPattern(SelectorPattern):
    patterns: Any = ...
    matched_name: Any = ...
    re_pseudo_name: Any = ...
    def __init__(self, patterns: Any) -> None: ...
    def get_name(self): ...
    def enabled(self, flags: Any): ...
    def match(self, selector: Any, index: Any): ...

class _Selector:
    tag: Any = ...
    ids: Any = ...
    classes: Any = ...
    attributes: Any = ...
    nth: Any = ...
    selectors: Any = ...
    relations: Any = ...
    rel_type: Any = ...
    contains: Any = ...
    lang: Any = ...
    flags: Any = ...
    no_match: Any = ...
    def __init__(self, **kwargs: Any) -> None: ...
    def _freeze_relations(self, relations: Any): ...
    def freeze(self): ...
    def __str__(self): ...
    __repr__: Any = ...

class CSSParser:
    css_tokens: Any = ...
    pattern: Any = ...
    flags: Any = ...
    debug: Any = ...
    custom: Any = ...
    def __init__(self, selector: Any, custom: Optional[Any] = ..., flags: int = ...) -> None: ...
    def parse_attribute_selector(self, sel: Any, m: Any, has_selector: Any): ...
    def parse_tag_pattern(self, sel: Any, m: Any, has_selector: Any): ...
    def parse_pseudo_class_custom(self, sel: Any, m: Any, has_selector: Any): ...
    def parse_pseudo_class(self, sel: Any, m: Any, has_selector: Any, iselector: Any, is_html: Any): ...
    def parse_pseudo_nth(self, sel: Any, m: Any, has_selector: Any, iselector: Any): ...
    def parse_pseudo_open(self, sel: Any, name: Any, has_selector: Any, iselector: Any, index: Any): ...
    def parse_has_combinator(self, sel: Any, m: Any, has_selector: Any, selectors: Any, rel_type: Any, index: Any): ...
    def parse_combinator(self, sel: Any, m: Any, has_selector: Any, selectors: Any, relations: Any, is_pseudo: Any, index: Any): ...
    def parse_class_id(self, sel: Any, m: Any, has_selector: Any): ...
    def parse_pseudo_contains(self, sel: Any, m: Any, has_selector: Any): ...
    def parse_pseudo_lang(self, sel: Any, m: Any, has_selector: Any): ...
    def parse_pseudo_dir(self, sel: Any, m: Any, has_selector: Any): ...
    def parse_selectors(self, iselector: Any, index: int = ..., flags: int = ...): ...
    def selector_iter(self, pattern: Any) -> None: ...
    def process_selectors(self, index: int = ..., flags: int = ...): ...

CSS_LINK: Any
CSS_CHECKED: Any
CSS_DEFAULT: Any
CSS_INDETERMINATE: Any
CSS_DISABLED: Any
CSS_ENABLED: Any
CSS_REQUIRED: Any
CSS_OPTIONAL: Any
CSS_PLACEHOLDER_SHOWN: Any
CSS_NTH_OF_S_DEFAULT: Any
CSS_READ_WRITE: Any
CSS_READ_ONLY: Any
CSS_IN_RANGE: Any
CSS_OUT_OF_RANGE: Any
