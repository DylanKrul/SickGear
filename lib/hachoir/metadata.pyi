# Stubs for hachoir_py3.metadata.metadata (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from hachoir_py3.core.log import Logger
from typing import Any, Optional

extractors: Any

class Metadata(Logger):
    header: str = ...
    def __init__(self, parent: Any, quality: Any = ...) -> None: ...
    def __setattr__(self, key: Any, value: Any) -> None: ...
    def setHeader(self, text: Any) -> None: ...
    def getItems(self, key: Any): ...
    def getItem(self, key: Any, index: Any): ...
    def has(self, key: Any): ...
    def get(self, key: Any, default: Optional[Any] = ..., index: int = ...): ...
    def getValues(self, key: Any): ...
    def getText(self, key: Any, default: Optional[Any] = ..., index: int = ...): ...
    def register(self, data: Any) -> None: ...
    def __iter__(self): ...
    def exportPlaintext(self, priority: Optional[Any] = ..., human: bool = ..., line_prefix: str = ..., title: Optional[Any] = ...): ...
    def exportDictionary(self, priority: Optional[Any] = ..., human: bool = ..., title: Optional[Any] = ...): ...
    def __bool__(self): ...

class RootMetadata(Metadata):
    def __init__(self, quality: Any = ...) -> None: ...

class MultipleMetadata(RootMetadata):
    header: str = ...
    def __init__(self, quality: Any = ...) -> None: ...
    def __contains__(self, key: Any): ...
    def __getitem__(self, key: Any): ...
    def iterGroups(self): ...
    def __bool__(self): ...
    def addGroup(self, key: Any, metadata: Any, header: Optional[Any] = ...): ...
    def exportPlaintext(self, priority: Optional[Any] = ..., human: bool = ..., line_prefix: str = ...): ...
    def exportDictionary(self, priority: Optional[Any] = ..., human: bool = ...): ...

def registerExtractor(parser: Any, extractor: Any) -> None: ...
def extractMetadata(parser: Any, quality: Any = ...): ...
